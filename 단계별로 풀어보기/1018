import java.io.*;
import java.util.StringTokenizer;

public class Main {
    static String[] chessBoard;
    static String[] startW = { "WBWBWBWB", "BWBWBWBW", "WBWBWBWB", "BWBWBWBW", "WBWBWBWB", "BWBWBWBW", "WBWBWBWB", "BWBWBWBW"};
    static String[] startB = { "BWBWBWBW", "WBWBWBWB", "BWBWBWBW", "WBWBWBWB", "BWBWBWBW", "WBWBWBWB", "BWBWBWBW", "WBWBWBWB"};
    static int minValue = Integer.MAX_VALUE;
    
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        
        st = new StringTokenizer(br.readLine());
        int M = Integer.parseInt(st.nextToken());
        int N = Integer.parseInt(st.nextToken());
        chessBoard = new String[M];

        for (int i = 0; i < M; i++) {
            chessBoard[i] = br.readLine();
        }

        int count;
        for (int i = 0; i < M - 8 + 1; i++) {
            for (int j = 0; j < N - 8 + 1; j++) {
                // W
                count = 0;
                for (int k = 0; k < 8; k++) {
                    for (int l = 0; l < 8; l++) {
                        if (chessBoard[i + k].charAt(j + l) != startW[k].charAt(l)) {
                            count++;
                        }
                    }
                }
                if (count < minValue) {
                    minValue = count;
                }
                // B
                count = 0;
                for (int k = 0; k < 8; k++) {
                    for (int l = 0; l < 8; l++) {
                        if (chessBoard[i + k].charAt(j + l) != startB[k].charAt(l)) {
                            count++;
                        }
                    }
                }
                if (count < minValue) {
                    minValue = count;
                }
            }
        }
        System.out.println(minValue);
    }
}
