// 시간초과난 O(T * N) 풀이방법
import java.io.*;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int T, N;
        long sum;

        T = Integer.parseInt(br.readLine());
        for (int i = 0; i < T; i++) {
            N = Integer.parseInt(br.readLine());
            sum = 0;
            for (int j = 1; j <= N; j++) {
                sum += (N / j) * j;
            }
            bw.write(sum + "\n");
        }
        bw.flush();
    }
}

// 통과한 O(NloglogN) 풀이방법(에라토네스의 체, DP)
import java.io.*;

public class Main {
    static long[] dp = new long[1000001];

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int T, N;

        T = Integer.parseInt(br.readLine());
        for (int i = 1; i <= 1000000; i++) {
            for (int j = i; j <= 1000000; j += i) {
                dp[j] += i;
            }
        }

        for (int i = 2; i <= 1000000; i++) {
            dp[i] += dp[i - 1];
        }

        for (int i = 0; i < T; i++) {
            N = Integer.parseInt(br.readLine());
            bw.write(dp[N] + "\n");
        }
        bw.flush();
    }
}
