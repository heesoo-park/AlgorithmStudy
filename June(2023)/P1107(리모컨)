// 통과한 풀이
// 어떻게 구별해서 구분하지? 라고 처음에 생각했다.
// 하지만 그냥 0부터 최대값까지 돌면서 체크하는 방식으로 되는 문제였다
// 체크하는 것도 매우 복잡할 거라고 생각했는데 그저 고장난 버튼이 포함되면 넘어가고 포함되지 않으면 거리를 구해 비교하면 되는 거였다
// 브루트포스가 쉬워보였지만 완전탐색 자체도 좀 어렵다...
import java.io.*;
import java.util.StringTokenizer;

public class Main {
    static int N, M;
    static boolean[] buttons = new boolean[11];

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        N = Integer.parseInt(br.readLine());
        M = Integer.parseInt(br.readLine());
        if (M != 0) {
            st = new StringTokenizer(br.readLine());
            for (int i = 0; i < M; i++) {
                int idx = Integer.parseInt(st.nextToken());
                buttons[idx] = true;
            }
        }
        
        minClick();
    }

    static void minClick() {
        int ans = Math.abs(100 - N);

        for (int i = 0; i <= 999999; i++) {
            String str = String.valueOf(i);
            int len = str.length();

            boolean breakButton = false;
            for (int j = 0; j < len; j++) {
                if (buttons[str.charAt(j) - '0']) {
                    breakButton = true;
                    break;
                }
            }
            if (!breakButton) {
                int min = Math.abs(N - i) + len;
                ans = Math.min(min, ans);
            }
        }

        System.out.println(ans);
    }
}
